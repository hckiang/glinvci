# -*- Makefile -*-
PKG_CFLAGS=@XTRA_CFLAGS@ @OMPFLAGS@
PKG_LIBS=@OMPFLAGS@ $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) # `pkg-config --silence-errors --libs tcmalloc`

## If you place phytr.o as the first object file, the GCC LTO linker
## will complain about something like this:
##
## <built-in>: warning: type of '__builtin_realloc' does not match original declaration [-Wlto-type-mismatch]
## /usr/include/stdlib.h:550:14: note: type mismatch in parameter 1
##   550 | extern void *realloc (void *__ptr, size_t __size)
##       |              ^
## /usr/include/stdlib.h:550:14: note: 'realloc' was previously declared here
## /usr/include/stdlib.h:550:14: note: code may be misoptimized unless '-fno-strict-aliasing' is used
##
## But -fno-strict-aliasing doesn't kill the warning, as expected.
##
## It seems that when phytr.o is placed at the beginning, GCC will link some realloc() calls from a
## the Fortran code to __builtin_realloc instead of stdlib.h's one; and this leads to the
## conflict. But if phytr.o is included after dglinv.o or even at the end, the Fortran code's realloc
## calls will be linked to stdlib.h's one.

OBJECTS=dglinv.o phytr.o oumods.o chn.o test_ieee_fort.o test_ieee_c.o 

